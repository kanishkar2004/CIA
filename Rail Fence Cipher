void rail_fence_encrypt(char *plain_text, int rails, char *cipher_text) {
    int len = strlen(plain_text);
    char rail[rails][len];
    for (int i = 0; i < rails; i++)
        for (int j = 0; j < len; j++)
            rail[i][j] = '\0';

    int row = 0, dir_down = 0;
    for (int i = 0; i < len; i++) {
        rail[row][i] = plain_text[i];
        if (row == 0 || row == rails - 1)
            dir_down = !dir_down;
        row += dir_down ? 1 : -1;
    }

    int index = 0;
    for (int i = 0; i < rails; i++)
        for (int j = 0; j < len; j++)
            if (rail[i][j] != '\0')
                cipher_text[index++] = rail[i][j];
    cipher_text[index] = '\0';
}

void rail_fence_decrypt(char *cipher_text, int rails, char *plain_text) {
    int len = strlen(cipher_text);
    char rail[rails][len];
    for (int i = 0; i < rails; i++)
        for (int j = 0; j < len; j++)
            rail[i][j] = '\0';

    int row = 0, dir_down = 0;
    for (int i = 0; i < len; i++) {
        rail[row][i] = '*';
        if (row == 0 || row == rails - 1)
            dir_down = !dir_down;
        row += dir_down ? 1 : -1;
    }

    int index = 0;
    for (int i = 0; i < rails; i++)
        for (int j = 0; j < len; j++)
            if (rail[i][j] == '*')
                rail[i][j] = cipher_text[index++];

    row = 0, dir_down = 0, index = 0;
    for (int i = 0; i < len; i++) {
        plain_text[i] = rail[row][i];
        if (row == 0 || row == rails - 1)
            dir_down = !dir_down;
        row += dir_down ? 1 : -1;
    }
    plain_text[len] = '\0';
}
